// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Avatars {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String   @unique
  photo_url  String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model User {
  id            String   @id @default(uuid())
  auth_id       String   @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  last_login_at DateTime @default(now())
  name          String   @db.VarChar(255)
  last_name     String?  @db.VarChar(255)
  avatars       Avatars?
}

model Albuns {
  id           String   @id @default(uuid())
  id_spotify   String?  @db.VarChar(255)
  artist_id    String   @db.VarChar(255)
  Artist       Artists? @relation(fields: [artist_id], references: [id])
  cover        String   @db.VarChar(255)
  name         String   @db.VarChar(255)
  tracks_count Int      @db.Integer
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  Tracks       Tracks[]
}

model Artists {
  id         String   @id @default(uuid())
  id_spotify String?  @db.VarChar(255)
  name       String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Albuns     Albuns[]
}

model Tracks {
  id                String   @id @default(uuid())
  id_spotify        String?  @db.VarChar(255)
  id_album          String   @db.VarChar(255)
  Albuns            Albuns?  @relation(fields: [id_album], references: [id])
  name              String   @db.VarChar(255)
  duration          Int      @db.Integer
  position_original Int      @db.Integer
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}
